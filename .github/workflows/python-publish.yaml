# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish Python 🐍 distribution 📦 to PyPI

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: read

jobs:
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest
    steps:
      - name: Log GitHub event details
        run: |
          echo "🎉 Triggered by event: ${{ github.event_name }}"
          echo "🐧 Running on: ${{ runner.os }}"
          echo "🔎 Branch: ${{ github.ref }}, Repository: ${{ github.repository }}"
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install uv and build tools
        run: |
          python -m pip install --upgrade pip
          pip install uv build
      - name: Install dependencies
        run: uv pip install --system --dev
      - name: Build distribution
        run: |
          uv venv create
          uv pip install . --system
          python -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-pypi:
    name: Publish distribution 📦 to PyPI
    needs: build  # Ensure it runs after build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/ocx_common
    permissions:
      id-token: write  # Needed for PyPI trusted publishing
    steps:
      - name: Download built distributions
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Install uv
        run: |
          python -m pip install --upgrade pip
          pip install uv
      - name: Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
